name: Pulse Fetch MCP Server CI

on:
  push:
    branches:
      - main
    paths:
      - 'productionized/pulse-fetch/**'
      - '.github/workflows/pulse-fetch-ci.yml'
  pull_request:
    paths:
      - 'productionized/pulse-fetch/**'
      - '.github/workflows/pulse-fetch-ci.yml'

jobs:
  functional-tests:
    name: Pulse Fetch MCP Server Functional Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: productionized/pulse-fetch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci && npm run install-all

      - name: Build project
        run: npm run build

      - name: Install and build test-mcp-client
        run: cd ../../test-mcp-client && npm install && npm run build

      - name: Run functional tests
        run: npm run test:run -- --reporter=json --reporter=default --outputFile=test-results.json
        env:
          FIRECRAWL_API_KEY: test-api-key
          BRIGHTDATA_BEARER_TOKEN: test-bearer-token

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: functional-test-results
          path: productionized/pulse-fetch/test-results.json
          retention-days: 7

  integration-tests:
    name: Pulse Fetch MCP Server Integration Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: productionized/pulse-fetch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci && npm run ci:install

      - name: Install test-mcp-client dependencies
        run: cd ../../test-mcp-client && npm ci

      - name: Build test-mcp-client
        run: cd ../../test-mcp-client && npm run build

      - name: Run integration tests
        run: npm run test:integration
        env:
          FIRECRAWL_API_KEY: test-api-key
          BRIGHTDATA_BEARER_TOKEN: test-bearer-token
